group 'com.jarvan.tobias'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '2.2.0'
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:8.9.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    if (project.android.hasProperty("namespace")) {
        namespace 'com.jarvan.tobias'
    }

    compileSdk 34

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    defaultConfig {
        minSdkVersion 24
        consumerProguardFiles 'consumer-proguard-rules.txt'
    }

    dependencies {
        implementation 'com.alipay.sdk:alipaysdk-android:15.8.38'
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.2'
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.10.2'
        // 强制插件自身使用高版本元数据库
        implementation "org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.8.0"
        // 排除其他依赖带来的旧版本
        configurations.all {
            resolutionStrategy {
                force "org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.8.0"
            }
        }
        testImplementation 'org.jetbrains.kotlin:kotlin-test'
        testImplementation 'org.mockito:mockito-core:5.0.0'
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen {false}
                showStandardStreams = true
            }
        }
    }
}
